pipeline {
    agent any

    tools {
        nodejs "NodeJS 18.18.0"
    }

    stages {
        stage("Notify Start") {
            steps {
                script {
                    sendMessageToTelegram("1")
                }
            }
        }

        stage("Build") {
            steps {
                sh "npm -v"
                sh "node -v"
                sh "npm install"
                sh "npm run build"
                echo "BUILD SUCCESS LISTING FILES"
                sh "ls -al"
            }
        }

        stage("Deploy") {
            steps {
                deployToFTP("Rabbit Server FTP", "pokeapp")
            }
        }
    }

    post {
        failure {
            script {
                sendMessageToTelegram("0")
            }
        }
        success {
            script {
                sendMessageToTelegram("2")
            }
        }
    }
}

def deployToFTP(configName, remoteDirectory) {
    script {
        // Menggunakan step 'Publish Over FTP' untuk mengunggah file
        ftpPublisher(
            failOnError: true, // Gagal jika ada kesalahan
            publishers: [
                // Konfigurasi FTP Site
                [
                    configName: configName, // Nama konfigurasi FTP yang sudah ada di Jenkins
                    transfers: [
                        // Konfigurasi pengiriman file
                        [
                            sourceFiles: "dist/**/*", // Pola file yang akan diunggah
                            remoteDirectory: remoteDirectory, // Direktori remote di server FTP
                            removePrefix: "dist", // Hapus prefiks direktori lokal
                            flatten: false, // Apakah mempertahankan struktur direktori
                        ]
                    ]
                ]
            ]
        )
    }
}

def sendMessageToTelegram(messageCode) {
    // messageCode: 0 = Error, 1 = Start, 2 = Success
    // Mendapatkan informasi tentang branch, commit hash, dan last commit author
    def githubUrl = sh(script: 'git config --get remote.origin.url', returnStdout: true).trim()
    def branchName = env.BRANCH_NAME
    def commitHash = env.GIT_COMMIT
    def lastCommitAuthor = sh(script: 'git log -1 --pretty=format:%an', returnStdout: true).trim()

    echo "GitHub URL: ${githubUrl}"
    echo "Branch: ${branchName}"
    echo "Commit Hash: ${commitHash}"
    echo "Last Commit Author: ${lastCommitAuthor}"
    def jobName = env.JOB_NAME
    def buildNumber = env.BUILD_NUMBER
    def jenkinsUrl = "https://jenkins.otoreply.com/"
    def fullBlueOceanUrl = "${jenkinsUrl}blue/organizations/jenkins/${jobName}/detail/${jobName}/${buildNumber}/pipeline"
    def group = "DEPLOYMENT"
    def senderBaseUrl = "http://192.168.56.1:3000/telemon"
    sh "curl -X GET \"${senderBaseUrl}?grup=${group}&msgCode=${messageCode}&jobName=${jobName}&buildNum=${buildNumber}&logsUrl=${fullBlueOceanUrl}\""
}